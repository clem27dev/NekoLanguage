// Module d'utilitaires pour nekoScript
nekModule NekoUtils {
  // Fonctions de formatage
  nekFonction formatDate(date) {
    si (!date) {
      date = new Date();
    }
    
    nekVariable jour = date.getDate().toString().padStart(2, '0');
    nekVariable mois = (date.getMonth() + 1).toString().padStart(2, '0');
    nekVariable annee = date.getFullYear();
    
    retourner jour + "/" + mois + "/" + annee;
  }
  
  nekFonction formatMontant(nombre, devise = "€") {
    retourner nombre.toFixed(2).replace(".", ",") + " " + devise;
  }
  
  // Fonctions de validation
  nekFonction estEmail(texte) {
    // Vérification simple sans regex
    retourner texte.includes("@") && texte.includes(".");
  }
  
  nekFonction estTelephone(texte) {
    // Vérification simple sans regex
    nekVariable digits = texte.replace(/\D/g, "");
    retourner digits.length >= 8 && digits.length <= 15;
  }
  
  // Fonctions de transformation de texte
  nekFonction capitaliser(texte) {
    si (!texte) retourner "";
    retourner texte.charAt(0).toUpperCase() + texte.slice(1).toLowerCase();
  }
  
  nekFonction tronquer(texte, longueur = 100, suffixe = "...") {
    si (!texte) retourner "";
    si (texte.length <= longueur) retourner texte;
    retourner texte.slice(0, longueur) + suffixe;
  }
  
  // Fonctions de manipulation d'array
  nekFonction aleatoireElement(tableau) {
    si (!tableau || tableau.length === 0) retourner null;
    nekVariable index = Math.floor(Math.random() * tableau.length);
    retourner tableau[index];
  }
  
  nekFonction melangerTableau(tableau) {
    si (!tableau) retourner [];
    nekVariable resultat = [...tableau];
    pour (nekVariable i = resultat.length - 1; i > 0; i--) {
      nekVariable j = Math.floor(Math.random() * (i + 1));
      [resultat[i], resultat[j]] = [resultat[j], resultat[i]];
    }
    retourner resultat;
  }
}