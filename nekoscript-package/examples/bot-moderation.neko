// Exemple de bot de mod√©ration Discord en nekoScript
// Ce bot permet de mod√©rer un serveur Discord avec des commandes de gestion

// Importer le module Discord
importer Discord;

// Configuration du bot
nekVariable TOKEN = "VOTRE_TOKEN_DISCORD_ICI";
nekVariable PREFIX = "!mod";  // Pr√©fixe pour les commandes
nekVariable MOD_ROLE_ID = "ID_DU_ROLE_MODERATEUR"; // Remplacer par l'ID de votre r√¥le mod√©rateur

// Cr√©er et configurer le bot
nekVariable bot = nekCr√©erBot(TOKEN)
  .d√©finirPr√©fixe(PREFIX)
  .changerStatut("Mod√©ration | !mod aide", "REGARDE");

// Quand le bot est pr√™t
bot.surConnexion(function(info) {
  nekAfficher("Bot de mod√©ration connect√© comme: " + info.tag);
  nekAfficher("Pr√©sent sur " + info.serveurs + " serveurs");
});

// Fonction pour v√©rifier si l'utilisateur est mod√©rateur
nekFonction estModerateur(message) {
  // V√©rifier si le message provient d'un serveur
  si (message.serveurId === null) {
    retourner false;
  }
  
  // R√©cup√©rer le membre via l'API Discord.js
  nekVariable membre = bot.client.guilds.cache.get(message.serveurId).members.cache.get(message.auteurId);
  
  // V√©rifier si le membre a le r√¥le mod√©rateur
  si (membre === undefined) {
    retourner false;
  }
  
  retourner membre.roles.cache.has(MOD_ROLE_ID);
}

// G√©rer les messages re√ßus
bot.surMessage(function(message) {
  // Ignorer si le message ne commence pas par le pr√©fixe
  si (message.contenu.startsWith(PREFIX) === false) {
    retourner;
  }

  // Parser la commande
  nekVariable commande = parseCommandes(PREFIX, message.contenu);
  
  // Si la commande est nulle, ignorer
  si (commande === null) {
    retourner;
  }
  
  // V√©rifier si l'utilisateur est mod√©rateur pour les commandes de mod√©ration
  si (commande.commandName !== "aide" && commande.commandName !== "info") {
    si (estModerateur(message) === false) {
      message.r√©pondre("‚ùå Vous n'avez pas les permissions n√©cessaires pour utiliser cette commande.");
      retourner;
    }
  }

  // Traiter les diff√©rentes commandes
  si (commande.commandName === "aide" || commande.commandName === "help") {
    // Commande d'aide
    nekVariable embed = bot.cr√©erEmbed(
      "Bot de Mod√©ration - Aide",
      "Pr√©fixe: `" + PREFIX + "`\nCommandes disponibles:",
      "#ff3366"
    )
    .ajouterChamp(PREFIX + " aide", "Affiche cette aide", false)
    .ajouterChamp(PREFIX + " info", "Informations sur le bot", false)
    .ajouterChamp(PREFIX + " clear [nombre]", "Supprime un nombre de messages (max 100)", false)
    .ajouterChamp(PREFIX + " kick @utilisateur [raison]", "Expulse un utilisateur", false)
    .ajouterChamp(PREFIX + " ban @utilisateur [raison]", "Bannit un utilisateur", false)
    .ajouterChamp(PREFIX + " mute @utilisateur [dur√©e]", "Met en sourdine un utilisateur", false)
    .ajouterChamp(PREFIX + " unmute @utilisateur", "Retire la sourdine d'un utilisateur", false)
    .d√©finirFooter("Bot de Mod√©ration nekoScript v1.0");
    
    message.r√©pondre({ embeds: [embed.embed] });
  }
  sinon si (commande.commandName === "info") {
    // Informations sur le bot
    nekVariable embed = bot.cr√©erEmbed(
      "Bot de Mod√©ration nekoScript",
      "Ce bot est con√ßu pour aider √† la mod√©ration de votre serveur Discord.",
      "#ff3366"
    )
    .ajouterChamp("Fonctionnalit√©s", "‚úì Gestion des messages\n‚úì Gestion des utilisateurs\n‚úì Logs d'actions", false)
    .ajouterChamp("Version", "1.0.0", true)
    .ajouterChamp("Pr√©fixe", PREFIX, true)
    .d√©finirFooter("Cr√©√© avec nekoScript üê±");
    
    message.r√©pondre({ embeds: [embed.embed] });
  }
  sinon si (commande.commandName === "clear") {
    // Suppression de messages
    nekVariable nombre = 10; // Valeur par d√©faut
    
    // V√©rifier si un nombre est fourni
    si (commande.args.length > 0) {
      nombre = Number(commande.args[0]);
      si (isNaN(nombre)) {
        message.r√©pondre("‚ùå Veuillez fournir un nombre valide.");
        retourner;
      }
      si (nombre < 1 || nombre > 100) {
        message.r√©pondre("‚ùå Le nombre doit √™tre entre 1 et 100.");
        retourner;
      }
    }
    
    // Utiliser l'API Discord.js pour supprimer les messages
    message.channel.bulkDelete(nombre)
      .then((messages) => {
        message.r√©pondre("‚úÖ " + messages.size + " messages supprim√©s.").then((msg) => {
          // Supprimer le message de confirmation apr√®s 3 secondes
          setTimeout(() => msg.delete(), 3000);
        });
      })
      .catch((error) => {
        message.r√©pondre("‚ùå Erreur: " + error.message);
      });
  }
  sinon si (commande.commandName === "kick") {
    // Expulsion d'un utilisateur
    // V√©rifier si un utilisateur est mentionn√©
    si (commande.args.length < 1) {
      message.r√©pondre("‚ùå Veuillez mentionner un utilisateur √† expulser.");
      retourner;
    }
    
    // R√©cup√©rer l'utilisateur mentionn√©
    nekVariable mention = message.contenu.mentions.users.first();
    si (mention === undefined) {
      message.r√©pondre("‚ùå Utilisateur non trouv√©.");
      retourner;
    }
    
    // R√©cup√©rer la raison
    nekVariable raison = "Aucune raison fournie";
    si (commande.args.length > 1) {
      raison = commande.args.slice(1).join(" ");
    }
    
    // Expulser l'utilisateur
    message.guild.members.kick(mention, raison)
      .then(() => {
        message.r√©pondre("‚úÖ " + mention.tag + " a √©t√© expuls√©. Raison: " + raison);
      })
      .catch((error) => {
        message.r√©pondre("‚ùå Erreur: " + error.message);
      });
  }
  sinon si (commande.commandName === "ban") {
    // Bannissement d'un utilisateur
    // V√©rifier si un utilisateur est mentionn√©
    si (commande.args.length < 1) {
      message.r√©pondre("‚ùå Veuillez mentionner un utilisateur √† bannir.");
      retourner;
    }
    
    // R√©cup√©rer l'utilisateur mentionn√©
    nekVariable mention = message.contenu.mentions.users.first();
    si (mention === undefined) {
      message.r√©pondre("‚ùå Utilisateur non trouv√©.");
      retourner;
    }
    
    // R√©cup√©rer la raison
    nekVariable raison = "Aucune raison fournie";
    si (commande.args.length > 1) {
      raison = commande.args.slice(1).join(" ");
    }
    
    // Bannir l'utilisateur
    message.guild.members.ban(mention, { reason: raison })
      .then(() => {
        message.r√©pondre("‚úÖ " + mention.tag + " a √©t√© banni. Raison: " + raison);
      })
      .catch((error) => {
        message.r√©pondre("‚ùå Erreur: " + error.message);
      });
  }
  sinon si (commande.commandName === "mute" || commande.commandName === "unmute") {
    // Gestion de la sourdine (mute/unmute)
    message.r√©pondre("Cette fonctionnalit√© n√©cessite une configuration sp√©cifique au serveur.");
  }
  sinon {
    // Commande inconnue
    message.r√©pondre("‚ùì Commande inconnue. Utilisez `" + PREFIX + " aide` pour voir les commandes disponibles.");
  }
});